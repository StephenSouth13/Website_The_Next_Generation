import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Button } from "@/components/ui/button"
import { Github, Mail, Code, Palette, Gamepad2, Linkedin } from "lucide-react"
import Image from "next/image"
import Link from "next/link"

const teamMembers = [
  {
    name: "Qu√°ch Th√†nh Long",
    role: "Leader ‚Ä¢ Web & Game Developer",
    description:
      "Tr∆∞·ªüng nh√≥m, ch·ªãu tr√°ch nhi·ªám ch√≠nh trong l·∫≠p tr√¨nh website v√† ph√°t tri·ªÉn game. Long kh√¥ng ch·ªâ s·ªü h·ªØu ki·∫øn th·ª©c k·ªπ thu·∫≠t v·ªØng v√†ng, m√† c√≤n c√≥ kh·∫£ nƒÉng l√£nh ƒë·∫°o, k·∫øt n·ªëi v√† truy·ªÅn c·∫£m h·ª©ng cho c·∫£ nh√≥m. L√† ng∆∞·ªùi kh·ªüi x∆∞·ªõng d·ª± √°n v√† d·∫´n d·∫Øt m·ªçi giai ƒëo·∫°n t·ª´ √Ω t∆∞·ªüng ƒë·∫øn s·∫£n ph·∫©m ho√†n ch·ªânh.",
    avatar: "/members/Long.png",
    skills: [
      "Project Management",
      "Unity",
      "C#",
      "React",
      "Next.js",
      "UI/UX Design",
      "Git",
      "Presentation"
    ],
    github: "https://github.com/StephenSouth13",
    email: "stephensouth1307@gmail.com",
    linkedin: "https://www.linkedin.com/in/quach-long-338018274/",
    icon: Code,
  },
  {
    name: "Nguy·ªÖn L√™ Gia Huy",
    role: "Game Programmer/Developer",
    description:
      "Huy l√† ng∆∞·ªùi ƒëam m√™ logic v√† t·ªëi ∆∞u. V·ªõi t∆∞ duy ph√¢n t√≠ch t·ªët, Huy chuy√™n x·ª≠ l√Ω gameplay mechanics v√† ƒë·∫£m b·∫£o hi·ªáu su·∫•t m∆∞·ª£t m√† cho game. L√† tr·ª• c·ªôt k·ªπ thu·∫≠t ƒë√°ng tin c·∫≠y trong nh√≥m.",
    avatar: "/members/Huy.png",
    skills: ["C#", "Unity", "Algorithm", "Performance Optimization"],
    github: "https://github.com/GiaHuy1106",
    email: "huynlg.124010124044@vtc.edu.vn",
    icon: Code,
  },
  {
    name: "L∆∞∆°ng Nguy·ªÖn T·∫•n D≈©ng",
    role: "Game Programmer/Developer",
    description:
      "D≈©ng l√† ng∆∞·ªùi ki√™n ƒë·ªãnh, t·ªâ m·ªâ v√† c√≥ tr√°ch nhi·ªám cao. V·ªõi k·ªπ nƒÉng l·∫≠p tr√¨nh v·ªØng v√† kh·∫£ nƒÉng t·ªëi ∆∞u chi ti·∫øt, D≈©ng ƒë√≥ng vai tr√≤ quan tr·ªçng trong vi·ªác ho√†n thi·ªán gameplay ch·∫•t l∆∞·ª£ng v√† ·ªïn ƒë·ªãnh.",
    avatar: "/members/Dung.png",
    skills: ["C#", "Unity", "Algorithm", "Performance Optimization", "Presentation"],
    github: "https://github.com/DungLuong1602",
    email: "dunglnt.125010124006@vtc.edu.vn",
    icon: Code,
  },
  {
    name: "Tr·∫ßn C√¥ng Thu·∫≠n",
    role: "Sound Designer & 3D Artist",
    description:
      "Thu·∫≠n mang ƒë·∫øn linh h·ªìn ngh·ªá thu·∫≠t cho d·ª± √°n. V·ªõi k·ªπ nƒÉng thi·∫øt k·∫ø √¢m thanh v√† m√¥ h√¨nh 3D, Thu·∫≠n t·∫°o n√™n kh√¥ng gian s·ªëng ƒë·ªông cho game qua √¢m nh·∫°c v√† h√¨nh ·∫£nh tr·ª±c quan. L√† ng∆∞·ªùi ngh·ªá sƒ© t·∫≠n t·ª•y c·ªßa nh√≥m.",
    avatar: "/members/Thuan.png",
    skills: [
      "FL Studio",
      "Sound Effects",
      "Mixing & Mastering",
      "Maya",
      "Substance Painter"
    ],
    email: "thuantc.124020124035@vtc.edu.vn",
    github: "#",
    icon: Palette,
  },
]

export default function TeamPage() {
  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 py-20">
      <div className="container mx-auto px-4">
        <div className="text-center mb-16">
          <Badge className="mb-6 bg-purple-600/20 text-purple-300 border-purple-500/30">
            üë®‚Äçüë©‚Äçüëß‚Äçüë¶ ƒê·ªôi Ng≈© Ph√°t Tri·ªÉn
          </Badge>
          <h1 className="text-5xl md:text-6xl font-bold text-white mb-6 bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent">
            G·∫∑p G·ª° Nh√≥m Ph√°t Tri·ªÉn
          </h1>
          <p className="text-xl text-gray-300 max-w-3xl mx-auto">
            Nh√≥m sinh vi√™n ƒëam m√™ game development t·∫°i VTC Academy, c√πng nhau t·∫°o n√™n tr·∫£i nghi·ªám ƒë·ªôc ƒë√°o.
          </p>
        </div>

        <div className="grid grid-cols-2 md:grid-cols-4 gap-6 mb-16">
          {["4", "6+", "1000+", "‚àû"].map((number, idx) => (
            <div key={idx} className="text-center">
              <div className={`text-4xl font-bold text-purple-400 mb-2`}>{number}</div>
              <div className="text-gray-300">
                {idx === 0 && "Th√†nh Vi√™n"}
                {idx === 1 && "Th√°ng Ph√°t Tri·ªÉn"}
                {idx === 2 && "Gi·ªù Code"}
                {idx === 3 && "ƒêam M√™"}
              </div>
            </div>
          ))}
        </div>

        <div className="grid md:grid-cols-2 gap-8 mb-16">
          {teamMembers.map((member, index) => (
            <Card
              key={index}
              className="bg-slate-800/50 border-slate-700 hover:border-purple-500/50 transition-all duration-300 hover:transform hover:scale-105"
            >
              <CardHeader className="text-center">
                <div className="relative mx-auto mb-4">
                  <Image
                    src={member.avatar || "/placeholder.svg"}
                    alt={member.name}
                    width={120}
                    height={120}
                    className="rounded-full border-4 border-purple-500/30"
                  />
                  <div className="absolute -bottom-2 -right-2 w-10 h-10 bg-gradient-to-r from-purple-600 to-pink-600 rounded-full flex items-center justify-center">
                    <member.icon className="h-5 w-5 text-white" />
                  </div>
                </div>
                <CardTitle className="text-white text-xl">{member.name}</CardTitle>
                <CardDescription className="text-purple-300 font-medium">{member.role}</CardDescription>
              </CardHeader>
              <CardContent className="space-y-4">
                <p className="text-gray-300 text-center leading-relaxed">{member.description}</p>
                <div className="flex flex-wrap gap-2 justify-center">
                  {member.skills.map((skill, skillIndex) => (
                    <Badge key={skillIndex} variant="secondary" className="bg-purple-600/20 text-purple-300">
                      {skill}
                    </Badge>
                  ))}
                </div>
                <div className="flex justify-center space-x-4 pt-4">
                  {member.github && member.github !== "#" && (
                    <Link href={member.github} target="_blank">
                      <Button variant="ghost" size="icon" className="hover:bg-purple-600/20">
                        <Github className="h-5 w-5" />
                      </Button>
                    </Link>
                  )}
                  {member.email && (
                    <Link href={`mailto:${member.email}`}>
                      <Button variant="ghost" size="icon" className="hover:bg-purple-600/20">
                        <Mail className="h-5 w-5" />
                      </Button>
                    </Link>
                  )}
                  {member.linkedin && (
                    <Link href={member.linkedin} target="_blank">
                      <Button variant="ghost" size="icon" className="hover:bg-purple-600/20">
                        <Linkedin className="h-5 w-5" />
                      </Button>
                    </Link>
                  )}
                </div>
              </CardContent>
            </Card>
          ))}
        </div>

        <div className="bg-slate-800/30 rounded-lg p-8 text-center">
          <h2 className="text-3xl font-bold text-white mb-6">VTC Academy</h2>
          <p className="text-gray-300 text-lg mb-6 max-w-3xl mx-auto">
            Ch√∫ng t√¥i l√† sinh vi√™n VTC Academy - n∆°i ƒë√†o t·∫°o c√¥ng ngh·ªá h√†ng ƒë·∫ßu. D·ª± √°n "The Next Generation" l√† k·∫øt qu·∫£ c·ªßa ƒëam m√™ v√† s√°ng t·∫°o kh√¥ng ng·ª´ng.
          </p>
          <div className="grid md:grid-cols-3 gap-6 mt-8">
            {[
              { icon: <Code className="h-8 w-8 text-white" />, title: "H·ªçc T·∫≠p", desc: "ƒê∆∞a ki·∫øn th·ª©c th√†nh s·∫£n ph·∫©m th·ª±c t·∫ø", color: "bg-blue-600" },
              { icon: <Gamepad2 className="h-8 w-8 text-white" />, title: "Th·ª±c H√†nh", desc: "R√®n luy·ªán k·ªπ nƒÉng qua d·ª± √°n game", color: "bg-green-600" },
              { icon: <Palette className="h-8 w-8 text-white" />, title: "S√°ng T·∫°o", desc: "Kh∆°i ngu·ªìn c·∫£m h·ª©ng, th·ªÉ hi·ªán c√° t√≠nh", color: "bg-purple-600" },
            ].map((item, i) => (
              <div key={i} className="text-center">
                <div className={`w-16 h-16 ${item.color} rounded-full flex items-center justify-center mx-auto mb-4`}>
                  {item.icon}
                </div>
                <h3 className="text-xl font-semibold text-white mb-2">{item.title}</h3>
                <p className="text-gray-400">{item.desc}</p>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  )
}
